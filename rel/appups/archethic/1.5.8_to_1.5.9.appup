{"1.5.9",
 [{"1.5.8",
   [{apply,{'Elixir.Archethic.PubSub',notify_node_status,[node_down]}},
    {load_module,'Elixir.Archethic.Cldr.Currency',brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Cldr.Number.Transliterate',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.Archethic.Contracts.Interpreter.Library.Common.List',
                 brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Contracts.Interpreter.Library.Common.Math',
                 brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Crypto.ID',brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Crypto.NodeKeystore',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.Archethic.P2P.Message.ShardRepair',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.Archethic.P2P.Node',brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.Explorer.LayoutView',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.Explorer.WorldMapLive',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.ExplorerRouter',brutal_purge,soft_purge,
                 []},
    {load_module,'Elixir.Archethic.Crypto',brutal_purge,soft_purge,
                 ['Elixir.Archethic.Crypto.ID',
                  'Elixir.Archethic.Crypto.NodeKeystore']},
    {update,'Elixir.Archethic.Contracts.Worker',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto']},
    {update,'Elixir.Archethic.Crypto.SharedSecretsKeystore.SoftwareImpl',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto']},
    {update,'Elixir.Archethic.P2P.BootstrappingSeeds',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto']},
    {update,'Elixir.Archethic.P2P.MemTable',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.P2P.Node']},
    {update,'Elixir.Archethic.SelfRepair.Notifier',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto']},
    {load_module,'Elixir.ArchethicWeb.Explorer.NodeDetailsLive',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Crypto']},
    {load_module,'Elixir.Archethic.Bootstrap.TransactionHandler',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.SoftwareImpl',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto','Elixir.Archethic.Crypto.ID']},
    {load_module,'Elixir.Archethic.Mining.PendingTransactionValidation',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {load_module,'Elixir.Archethic.Mining.ProofOfWork',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {update,'Elixir.Archethic.Networking.Scheduler',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {update,'Elixir.Archethic.SharedSecrets.MemTablesLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {load_module,'Elixir.ArchethicWeb.Explorer.ExplorerView',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {load_module,'Elixir.ArchethicWeb.Explorer.SettingsLive',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {load_module,'Elixir.Archethic.Bootstrap',brutal_purge,soft_purge,
                 ['Elixir.Archethic.Bootstrap.TransactionHandler',
                  'Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {update,'Elixir.Archethic.P2P.MemTableLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.MemTable',
             'Elixir.Archethic.P2P.Node']},
    {apply,{supervisor,terminate_child,
                       ['Elixir.Archethic.Telemetry',prometheus_metrics]}},
    {apply,{supervisor,restart_child,
                       ['Elixir.Archethic.Telemetry',prometheus_metrics]}},
    {apply,{supervisor,terminate_child,
                       ['Elixir.Archethic.Telemetry',telemetry_poller]}},
    {apply,{supervisor,restart_child,
                       ['Elixir.Archethic.Telemetry',telemetry_poller]}},
    {apply,{'Elixir.Archethic.Contracts.Loader',reparse_workers_contract,[]}},
    {apply,{'Elixir.Archethic.P2P.MemTable', migrate_ets_table_1_5_6, []}},
    {apply,{'Elixir.Archethic.Crypto.NodeKeystore.SoftwareImpl', migrate_ets_table_1_5_6, []}},
    {apply,{'Elixir.Archethic.Crypto.SharedSecretsKeystore.SoftwareImpl', migrate_ets_table_1_5_6, []}},
    {apply,{'Elixir.Archethic.PubSub',notify_node_status, [node_up]}}]}],
 [{"1.5.8",
   [{load_module,'Elixir.Archethic.Cldr.Currency',brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Cldr.Number.Transliterate',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.Archethic.Contracts.Interpreter.Library.Common.List',
                 brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Contracts.Interpreter.Library.Common.Math',
                 brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Crypto.ID',brutal_purge,soft_purge,[]},
    {load_module,'Elixir.Archethic.Crypto.NodeKeystore',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.Archethic.P2P.Message.ShardRepair',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.Archethic.P2P.Node',brutal_purge,soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.Explorer.LayoutView',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.Explorer.WorldMapLive',brutal_purge,
                 soft_purge,[]},
    {load_module,'Elixir.ArchethicWeb.ExplorerRouter',brutal_purge,soft_purge,
                 []},
    {load_module,'Elixir.Archethic.Crypto',brutal_purge,soft_purge,
                 ['Elixir.Archethic.Crypto.ID',
                  'Elixir.Archethic.Crypto.NodeKeystore']},
    {update,'Elixir.Archethic.Contracts.Worker',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto']},
    {update,'Elixir.Archethic.Crypto.SharedSecretsKeystore.SoftwareImpl',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto']},
    {update,'Elixir.Archethic.P2P.BootstrappingSeeds',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto']},
    {update,'Elixir.Archethic.P2P.MemTable',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.P2P.Node']},
    {update,'Elixir.Archethic.SelfRepair.Notifier',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto']},
    {load_module,'Elixir.ArchethicWeb.Explorer.NodeDetailsLive',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Crypto']},
    {load_module,'Elixir.Archethic.Bootstrap.TransactionHandler',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {update,'Elixir.Archethic.Crypto.NodeKeystore.SoftwareImpl',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto','Elixir.Archethic.Crypto.ID']},
    {load_module,'Elixir.Archethic.Mining.PendingTransactionValidation',
                 brutal_purge,soft_purge,
                 ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {load_module,'Elixir.Archethic.Mining.ProofOfWork',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {update,'Elixir.Archethic.Networking.Scheduler',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {update,'Elixir.Archethic.SharedSecrets.MemTablesLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {load_module,'Elixir.ArchethicWeb.Explorer.ExplorerView',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {load_module,'Elixir.ArchethicWeb.Explorer.SettingsLive',brutal_purge,
                 soft_purge,
                 ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {load_module,'Elixir.Archethic.Bootstrap',brutal_purge,soft_purge,
                 ['Elixir.Archethic.Bootstrap.TransactionHandler',
                  'Elixir.Archethic.Crypto','Elixir.Archethic.P2P.Node']},
    {update,'Elixir.Archethic.P2P.MemTableLoader',
            {advanced,[]},
            brutal_purge,soft_purge,
            ['Elixir.Archethic.Crypto','Elixir.Archethic.P2P.MemTable',
             'Elixir.Archethic.P2P.Node']}]}]}.
