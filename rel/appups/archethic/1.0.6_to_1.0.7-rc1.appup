{"1.0.7-rc1",
 [{"1.0.6",
   [{add_module,'Elixir.Archethic.OracleChain.Services.UCOPrice.Providers.CoinMarketCap'},
    {add_module,'Elixir.Archethic.OracleChain.Services.UCOPrice.Providers.CoinPaprika'},
    {add_module,'Elixir.Archethic.P2P.Message.GenesisAddress'},
    {add_module,'Elixir.Archethic.P2P.Message.GetGenesisAddress'},
    {add_module,'Elixir.Archethic.P2P.Message.NotifyReplicationValidation'},
    {add_module,'Elixir.Archethic.P2P.Message.ReplicatePendingTransactionChain'},
    {add_module,'Elixir.Archethic.P2P.Message.ValidateTransaction'},
    {add_module,'Elixir.Archethic.Replication.Supervisor'},
    {add_module,'Elixir.Archethic.Replication.TransactionPool'},
    {add_module,'Elixir.ArchethicCache.LRU'},
    {add_module,'Elixir.ArchethicCache.LRUDisk'},
    {add_module,'Elixir.ArchethicWeb.API.WebHostingController.DirectoryListing'},
    {add_module,'Elixir.ArchethicWeb.API.WebHostingController.ReferenceTransaction'},
    {add_module,'Elixir.ArchethicWeb.API.WebHostingController.Resources'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.BeaconChainSummary'},
    {add_module,'Elixir.ArchethicWeb.GraphQLSchema.SortOrderEnum'},
    {add_module,'Elixir.ArchethicWeb.Pagination'},
    {load_module,'Elixir.Archethic.Contracts.ConditionInterpreter',[]},
    {load_module,'Elixir.Archethic.Metrics.Parser',[]},
    {load_module,'Elixir.Archethic.Networking.IPLookup.NATDiscovery.MiniUPNP',
                 []},
    {load_module,'Elixir.Archethic.Networking.PortForwarding',[]},
    {load_module,'Elixir.Archethic.OracleChain.Services.UCOPrice.Providers.Coingecko',
                 []},
    {update,'Elixir.Archethic.Telemetry',[]},
    {load_module,'Elixir.Archethic.Utils',[]},
    {load_module,'Elixir.ArchethicWeb.API.Schema.Ownership',[]},
    {load_module,'Elixir.ArchethicWeb.API.Types.TransactionType',[]},
    {load_module,'Elixir.ArchethicWeb.API.WebHostingController',[]},
    {load_module,'Elixir.ArchethicWeb.Domain',[]},
    {load_module,'Elixir.ArchethicWeb.ExplorerRootController',[]},
    {load_module,'Elixir.ArchethicWeb.GraphQLSchema.Compiled',[]},
    {update,'Elixir.ArchethicWeb.Supervisor',supervisor},
    {load_module,'Elixir.ArchethicWeb.UpController',[]},
    {load_module,'Elixir.Mix.Tasks.Archethic.CleanDb',[]},
    {load_module,'Elixir.Archethic.BeaconChain.SummaryAggregate',
                 ['Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.OracleChain.Services.UCOPrice',
                 ['Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.TransactionChain.Transaction',
                 ['Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Election',
                 ['Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Contracts.Interpreter.Library',
                 ['Elixir.Archethic.Election']},
    {load_module,'Elixir.Archethic.Utils.Regression.Benchmark.P2PMessage.Connection',
                 ['Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.P2P.MessageEnvelop',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Utils.Regression.Benchmark.P2PMessage',
                 ['Elixir.Archethic.Utils.Regression.Benchmark.P2PMessage.Connection']},
    {load_module,'Elixir.Archethic.P2P.ListenerProtocol',
                 ['Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.P2P.MessageEnvelop',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Mining.PendingTransactionValidation',
                 ['Elixir.Archethic.DB','Elixir.Archethic.Election',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Mining.ValidationContext',
                 ['Elixir.Archethic.Election','Elixir.Archethic.Mining',
                  'Elixir.Archethic.Replication',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.Mining.StandaloneWorkflow',
            ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Election',
             'Elixir.Archethic.Mining.PendingTransactionValidation',
             'Elixir.Archethic.Mining.ValidationContext',
             'Elixir.Archethic.P2P.Message',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction']},
    {update,'Elixir.Archethic.OracleChain.Scheduler',
            ['Elixir.Archethic','Elixir.Archethic.Bootstrap',
             'Elixir.Archethic.Election','Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction',
             'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.DB.EmbeddedImpl',
                 ['Elixir.Archethic.DB.EmbeddedImpl.ChainIndex',
                  'Elixir.Archethic.DB.EmbeddedImpl.ChainReader',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.DB',['Elixir.Archethic.DB.EmbeddedImpl']},
    {update,'Elixir.Archethic.Contracts.TransactionLookup',
            ['Elixir.Archethic.DB']},
    {load_module,'Elixir.ArchethicWeb.AEWebRootController',
                 ['Elixir.ArchethicWeb.API.WebHostingController']},
    {load_module,'Elixir.ArchethicWeb.API.TransactionPayload',
                 ['Elixir.Archethic.Utils']},
    {load_module,'Elixir.ArchethicWeb.Endpoint',
                 ['Elixir.Archethic.Bootstrap']},
    {load_module,'Elixir.Archethic',
                 ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Election',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.ExplorerIndexLive.TopTransactionsComponent',
                 ['Elixir.Archethic']},
    {update,'Elixir.ArchethicWeb.FaucetRateLimiter',
            ['Elixir.Archethic','Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.BeaconChainLive',
                 ['Elixir.Archethic','Elixir.Archethic.BeaconChain']},
    {load_module,'Elixir.ArchethicWeb.API.OriginKeyController',
                 ['Elixir.Archethic','Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction']},
    {load_module,'Elixir.ArchethicWeb.API.TransactionController',
                 ['Elixir.Archethic','Elixir.Archethic.Mining',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.ArchethicWeb.API.TransactionPayload']},
    {load_module,'Elixir.ArchethicWeb.GraphQLSchema.Resolver',
                 ['Elixir.Archethic','Elixir.Archethic.BeaconChain',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.Mining',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction']},
    {load_module,'Elixir.ArchethicWeb.GraphQLSchema',
                 ['Elixir.ArchethicWeb.GraphQLSchema.Resolver']},
    {load_module,'Elixir.ArchethicWeb.NodeSharedSecretsChainLive',
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.OracleChainLive',
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.RewardChainLive',
                 ['Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.TransactionChainLive',
                 ['Elixir.Archethic']},
    {load_module,'Elixir.Archethic.Bootstrap',
                 ['Elixir.Archethic.Replication',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.UserSocket',
                 ['Elixir.Archethic.Bootstrap']},
    {update,'Elixir.Archethic.BeaconChain.SlotTimer',
            ['Elixir.Archethic.BeaconChain',
             'Elixir.Archethic.Bootstrap','Elixir.Archethic.DB',
             'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.BeaconChain.Summary',
                 ['Elixir.Archethic.BeaconChain.SlotTimer',
                  'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.DB.EmbeddedImpl.ChainIndex',
            ['Elixir.Archethic.TransactionChain.Transaction']},
    {load_module,'Elixir.Archethic.DB.EmbeddedImpl.ChainReader',
                 ['Elixir.Archethic.BeaconChain.Summary',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.DB.EmbeddedImpl.ChainIndex',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.P2P.Message',
                 ['Elixir.Archethic','Elixir.Archethic.BeaconChain',
                  'Elixir.Archethic.BeaconChain.Summary',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.Election','Elixir.Archethic.Mining',
                  'Elixir.Archethic.Replication',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.P2P.MessageEnvelop',
                 ['Elixir.Archethic.P2P.Message','Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.SharedSecrets.NodeRenewalScheduler',
            ['Elixir.Archethic','Elixir.Archethic.Bootstrap',
             'Elixir.Archethic.Election','Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.TransactionChain',
                 ['Elixir.Archethic.DB','Elixir.Archethic.Election',
                  'Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.TransactionChain.Transaction']},
    {load_module,'Elixir.Archethic.Replication.TransactionContext',
                 ['Elixir.Archethic.Election',
                  'Elixir.Archethic.TransactionChain']},
    {load_module,'Elixir.ArchethicWeb.GraphQLSchema.TransactionType',
                 ['Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.ArchethicWeb.GraphQLSchema.Resolver']},
    {update,'Elixir.Archethic.P2P.Client.Connection',
            ['Elixir.Archethic.P2P.Message',
             'Elixir.Archethic.P2P.MessageEnvelop','Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Replication',
                 ['Elixir.Archethic.Election','Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.Replication.TransactionContext',
                  'Elixir.Archethic.TransactionChain',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.Reward.Scheduler',
            ['Elixir.Archethic','Elixir.Archethic.Bootstrap',
             'Elixir.Archethic.DB','Elixir.Archethic.Election',
             'Elixir.Archethic.Utils']},
    {update,'Elixir.Archethic.Mining.DistributedWorkflow',
            ['Elixir.Archethic.BeaconChain','Elixir.Archethic.Election',
             'Elixir.Archethic.Mining.PendingTransactionValidation',
             'Elixir.Archethic.Mining.ValidationContext',
             'Elixir.Archethic.P2P.Message',
             'Elixir.Archethic.TransactionChain',
             'Elixir.Archethic.TransactionChain.Transaction',
             'Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.Mining',
                 ['Elixir.Archethic.Election',
                  'Elixir.Archethic.Mining.DistributedWorkflow',
                  'Elixir.Archethic.Mining.PendingTransactionValidation',
                  'Elixir.Archethic.Mining.StandaloneWorkflow']},
    {load_module,'Elixir.ArchethicWeb.FaucetController',
                 ['Elixir.Archethic',
                  'Elixir.Archethic.TransactionChain.Transaction',
                  'Elixir.Archethic.Utils',
                  'Elixir.ArchethicWeb.FaucetRateLimiter']},
    {load_module,'Elixir.Archethic.BeaconChain',
                 ['Elixir.Archethic.BeaconChain.SlotTimer',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
									'Elixir.Archethic.DB',
                  'Elixir.Archethic.Election','Elixir.Archethic.Utils']},
    {load_module,'Elixir.Archethic.SelfRepair.Sync',
                 ['Elixir.Archethic.BeaconChain',
                  'Elixir.Archethic.BeaconChain.SummaryAggregate',
                  'Elixir.Archethic.Bootstrap','Elixir.Archethic.DB',
                  'Elixir.Archethic.Election','Elixir.Archethic.P2P.Message',
                  'Elixir.Archethic.TransactionChain',
									'Elixir.Archethic.Utils']},
		{apply,{supervisor, restart_child,
						 ['Elixir.ArchethicWeb.Supervisor', web_hosting_cache_ref_tx]}},
		{apply,{supervisor, restart_child,
						 ['Elixir.ArchethicWeb.Supervisor', web_hosting_cache_file]}},
		{apply,{supervisor, start_child, ['Elixir.Archethic.Supervisor', #{
				id => 'Elixir.Archethic.Replication.Supervisor',
				start => {'Elixir.Archethic.Replication.Supervisor', start_link, [[]]},
				type => supervisor
			}]}},
    {delete_module,'Elixir.Archethic.P2P.Message.FirstAddress'},
    {delete_module,'Elixir.Archethic.P2P.Message.GetFirstAddress'}]}],
	[{"1.0.6",
		 []}]
	}.
